{"file":"Location-BnB0Z_ns.js","mappings":";;;;;;;;;;;;;AAUM,UAAA,SAAS,IAAI,IAAI;;;;;;;;;;;;;;;;;;;;;ACyEvB,UAAM,gBAAgB,iBAAiB;AACvC,UAAM,WAAW,SAAS,MAAM,cAAc,QAAQ;AAOtD,aAAS,UAAU,WAAW;AACtB,YAAA,0BAAU,KAAK;AACf,YAAA,CAAC,OAAO,OAAO,IAAI,UAAU,MAAM,GAAG,EAAE,IAAI,MAAM;AACxD,YAAM,QAAQ,IAAI,KAAK,IAAI,YAAY,GAAG,IAAI,SAAA,GAAY,IAAI,WAAW,OAAO,OAAO;AACvF,YAAM,SAAS,QAAQ;AAEnB,UAAA,UAAU,EAAU,QAAA;AAExB,YAAM,eAAe,KAAK,MAAM,SAAS,GAAK;AAC9C,YAAM,IAAI,KAAK,MAAM,eAAe,EAAE;AACtC,YAAM,IAAI,eAAe;AAEzB,aAAO,IAAI,IAAI,GAAG,CAAC,IAAI,EAAE,SAAA,EAAW,SAAS,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../components/location/Carte.vue","../../../../components/Location.vue"],"sourcesContent":["<template>\n  <div ref=\"mapRef\" class=\"w-full h-full rounded-xl border\" />\n</template>\n\n<script setup>\nconst props = defineProps({\n  location: Object,\n});\nimport { onMounted, ref } from \"vue\";\n\nconst mapRef = ref(null);\n\nonMounted(async () => {\n  const L = await import(\"leaflet\");\n  L.Icon.Default.mergeOptions({\n  iconRetinaUrl: '/leaflet/marker-icon-2x.png',\n  iconUrl: '/leaflet/marker-icon.png',\n  shadowUrl: '/leaflet/marker-shadow.png',\n});\n\n  await import(\"leaflet/dist/leaflet.css\");\n\n  const map = L.map(mapRef.value).setView(\n    [props.location.latitude, props.location.longitude],\n    14,\n  );\n\n  L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">Openstreetmap</a>',\n  }).addTo(map);\n\n  L.marker([props.location.latitude, props.location.longitude])\n    .addTo(map)\n    .bindPopup(props.location.adresse);\n});\n</script>\n\n<style scoped>\ndiv {\n  min-height: 400px;\n}\n</style>\n","<template>\n  <div class=\"bg-beige-light px-5 lg:px-28 py-10 lg:py-20\">\n    <div class=\"flex justify-center\">\n      <Overlay text=\"Emplacement\" />\n    </div>\n    <div class=\"space-y-4 mt-5\">\n      <h2 class=\"text-outline text-3xl lg:text-4xl text-white text-center\">\n        Où trouver notre <br />\n        foodtruck aujourd’hui ?\n      </h2>\n      <p class=\"text-gray-800 text-center font-poppins lg:w-2/3 mx-auto\">\n        L’avantage du food-truck, c’est qu’on cherche à être toujours au plus\n        proche de nos clients, et que tout le monde puisse passer à l’attaque\n        de nos frites : on se déplace, en street foood ! <br />\n        Le reste du temps, l’événementiel nous fait voyager aux quatre coins de\n        la région lyonnaise.\n      </p>\n    </div>\n\n    <div v-if=\"location\" class=\"lg:flex mt-10 gap-5 space-y-4 lg:space-y-0\">\n      <div\n        class=\"lg:w-2/5 px-4 py-5 lg:py-10 border-t border-l border-4 border-blue rounded-xl relative\"\n      >\n        <!-- Badge Timer -->\n        <div\n          v-if=\"location?.time_start\"\n          class=\"absolute top-4 right-4 bg-red text-white text-xs px-3 py-1 rounded-full shadow-md font-poppins\"\n        >\n          ⏱ Plus que\n          <span class=\"font-bold text-black\">{{ timeUntil(location.time_start) }}</span>\n          à attendre\n        </div>\n\n        <div class=\"pb-3 border-b border-black space-y-4\">\n          <Link\n            :text=\"location.city\"\n            isolateClass=\"w-fit text-white border-blue text-base bg-red\"\n            class=\"w-fit block\"\n          />\n          <span class=\"block text-sm\">{{ location.adresse }}</span>\n        </div>\n        <div class=\"py-3 border-b border-black space-y-4\">\n          <div>\n            <h4 v-html=\"location.text_top_time\" class=\"text-sm\"></h4>\n            <span class=\"text-sm font-poppins text-gray-800\">\n              {{ location.time_start.slice(0, 5) }} -\n              {{ location.time_end.slice(0, 5) }}\n            </span>\n          </div>\n          <div>\n            <h4 class=\"text-sm\">Commande</h4>\n            <span\n              v-html=\"location.commande\"\n              class=\"text-sm font-poppins text-gray-800\"\n            ></span>\n          </div>\n        </div>\n        <div class=\"py-3\">\n          <div>\n            <a\n              class=\"text-red underline text-sm\"\n              :href=\"location.link_itinerary\"\n            >\n              Itineraire ->\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"w-full border-t border-l border-4 border-blue rounded-xl\">\n        <Carte :location=\"location\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, computed } from \"vue\"\nimport Overlay from \"./ui/Overlay.vue\"\nimport Link from \"./ui/Link.vue\"\nimport Carte from \"~/components/location/Carte.vue\"\nimport { useLocationStore } from \"~/stores/locationStore\"\n\nconst locationStore = useLocationStore()\nconst location = computed(() => locationStore.location)\n\nonMounted(() => {\n  locationStore.fetchTodayLocation()\n})\n\n// Fonction pour calculer le temps restant jusqu'à l'heure de début\nfunction timeUntil(startTime) {\n  const now = new Date()\n  const [hours, minutes] = startTime.split(\":\").map(Number)\n  const start = new Date(now.getFullYear(), now.getMonth(), now.getDate(), hours, minutes)\n  const diffMs = start - now\n\n  if (diffMs <= 0) return \"0min\"\n\n  const totalMinutes = Math.floor(diffMs / 60000)\n  const h = Math.floor(totalMinutes / 60)\n  const m = totalMinutes % 60\n\n  return h > 0 ? `${h}h${m.toString().padStart(2, \"0\")}` : `${m}min`\n}\n</script>\n"],"version":3}